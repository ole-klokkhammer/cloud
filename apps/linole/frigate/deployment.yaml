apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frigate
  namespace: linole
  labels:
    app: frigate
spec:
  replicas: 1
  serviceName: frigate
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      namespace: linole
      labels:
        app: frigate
    spec:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - master0
      containers:
        # https://docs.frigate.video/frigate/installation/
        # https://github.com/blakeblackshear/blakeshome-charts/tree/master/charts/frigate
        - name: frigate
          image: ghcr.io/blakeblackshear/frigate:stable # -tensorrt Frigate build specific for amd64 devices running an nvidia GPU
          resources:
            limits:
              nvidia.com/gpu: 1
          securityContext:
            privileged: true # use if coral
          env:
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "all"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: FRIGATE_ENTRANCE_ROOF_IP
              value: "192.168.10.154"
            - name: FRIGATE_REOLINK_USER
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: FRIGATE_REOLINK_USER
            - name: FRIGATE_REOLINK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: frigate-secrets
                  key: FRIGATE_REOLINK_PASSWORD
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: http-auth
              containerPort: 8971
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
          volumeMounts:
            - mountPath: /dev/bus/usb
              name: coral-dev
            - mountPath: /config
              name: frigate-config
            - mountPath: /media/frigate
              name: frigate-media
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: coral-dev
          hostPath:
            path: /dev/bus/usb
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
  volumeClaimTemplates:
    - metadata:
        name: frigate-config
        namespace: linole
      spec:
        storageClassName: longhorn-single-replica
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeName: frigate-config
    - metadata:
        name: frigate-media
        namespace: linole
      spec:
        storageClassName: longhorn-single-replica
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        volumeName: frigate-media
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: frigate-config
  namespace: linole
  labels:
    app: frigate
spec:
  storageClassName: longhorn-single-replica
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: frigate-config
    volumeAttributes:
      numberOfReplicas: "1"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: frigate-media
  namespace: linole
  labels:
    app: frigate
spec:
  storageClassName: longhorn-single-replica
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: frigate-media
    volumeAttributes:
      numberOfReplicas: "1"