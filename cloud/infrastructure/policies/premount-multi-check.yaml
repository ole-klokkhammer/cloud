apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: inject-sentinel-check-multi
spec:
  rules:
    - name: add-wait-for-mounts
      match:
        any:
          - resources:
              kinds: ["Pod"]
              annotations:
                storage.k8s.io/sentinel-check: "multi"
      mutate:
        patchStrategicMerge:
          spec:
            initContainers:
              - name: wait-for-mounts
                image: busybox
                command:
                  - sh
                  - -c
                  - |
                    set -eu
                    : "${SENT_FILE:=.mounted}"
                    echo "Checking sentinel file '$SENT_FILE' under each /sentinel/<volume> mount"
                    found=0
                    fail=0
                    for d in /sentinel/*; do
                      [ -d "$d" ] || continue
                      found=1
                      f="$d/$SENT_FILE"
                      echo "Verifying $f ..."
                      ok=0
                      for i in $(seq 1 60); do
                        [ -f "$f" ] && { ok=1; break; }
                        echo "  waiting ($i/60)"; sleep 1
                      done
                      if [ "$ok" -ne 1 ]; then
                        echo "Missing $f"
                        fail=1
                      fi
                    done
                    [ "$found" -eq 1 ] || { echo "No /sentinel mounts found"; exit 1; }
                    exit "$fail"
                env:
                  - name: SENT_FILE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.annotations['storage.k8s.io/sentinel-file']
                volumeMounts: [] # filled by the foreach rule
    - name: add-sentinel-volume-mounts
      match:
        any:
          - resources:
              kinds: ["Pod"]
              annotations:
                storage.k8s.io/sentinel-check: "multi"
                storage.k8s.io/sentinel-volumes: "?*"
      mutate:
        foreach:
          - list: "{{ split(request.object.metadata.annotations['storage.k8s.io/sentinel-volumes'], ' ') }}"
            patchStrategicMerge:
              spec:
                initContainers:
                  - (name): wait-for-mounts
                    volumeMounts:
                      - name: "{{ element }}"
                        mountPath: "/sentinel/{{ element }}"
                        readOnly: true