apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: llama-api
  namespace: apis
  labels:
    app: llama-api
spec:
  replicas: 1
  serviceName: llama-api
  selector:
    matchLabels:
      app: llama-api
  template:
    metadata:
      labels:
        app: llama-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - master0
      initContainers:
        - name: check-fs-mount
          image: busybox
          command:
            [
              "sh",
              "-c",
              'test -f /fs/.mounted || (echo "File mount missing" && exit 1)',
            ]
          volumeMounts:
            - mountPath: /fs
              name: llama-data
      containers:
        - name: llama-api
          securityContext:
            privileged: true
          image: ghcr.io/ole-klokkhammer/llama-api:1.0.28
          command: [
              "/app/llama-server",
              "-m",
              "/models/gpt-oss-20b-Q4_K_M.gguf",
              "--port",
              "8080",
              "-ngl",
              "0", # CPU-only
              "-t",
              "12", # threads (6â€“12 on 3600XT)
              "-c",
              "16384", # context window size (cpu < 4096)
              "--jinja",
              "--temp",
              "1.0",
              "--top-p",
              "1.0",
              "--top-k",
              "0",
              # "-n",
              # "256",
              # "--hf-repo",
              # "unsloth/gpt-oss-20b-GGUF",
              # "--hf-file",
              # "gpt-oss-20b-Q4_K_M.gguf",
              # "-e",
              # "-ngl",
              # "33", # offload all layers to GPU
            ]
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: llama-data
              mountPath: /models
            # - name: renderd128
            #   mountPath: /dev/dri/renderD128 # Vulkan device
            # - name: card1
            #   mountPath: /dev/dri/card1 # Vulkan device
      volumes:
        - name: llama-data
          persistentVolumeClaim:
            claimName: llama-data-pvc
        # - name: renderd128
        #   hostPath:
        #     path: /dev/dri/renderD128
        #     type: CharDevice
        # - name: card1
        #   hostPath:
        #     path: /dev/dri/card1
        #     type: CharDevice
